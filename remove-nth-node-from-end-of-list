//A DIFFERENT APPROACH
//https://leetcode.com/problems/remove-nth-node-from-end-of-list/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode curr=head;
        int count=0;
        while(curr!=null)
        {
            curr=curr.next;
            count++;
        }
        curr=head;
        int num=0;
        if(count==1)
            return null;
        else
            if(count==2 && n==1)
            {
                head.next=null;
                return head;
            }
        else
            if(count==2 && n==2)
                return head.next;
        else
            if(num>count-n-1)
            {
                head=curr.next;

            }
        while(num<count-n-1)
        {
            curr=curr.next;
            num++;
        }
        curr.next=curr.next.next;
        return head;
    }
}
